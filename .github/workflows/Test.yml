name: Tests

on:
  workflow_dispatch:

env:
  GTEST_THROW_ON_FAILURE: 0
  GTEST_OUTPUT: \"xml:/tmp/test-results/\"
  SKIP_FORMAT_BUCK_CHECKS: 1
  GTEST_COLOR: 1
  CTEST_OUTPUT_ON_FAILURE: 1
  CTEST_TEST_TIMEOUT: 300
  ZLIB_DOWNLOAD_BASE: "https://rocksdb-deps.s3.us-west-2.amazonaws.com/pkgs/zlib"
  BZIP2_DOWNLOAD_BASE: "https://rocksdb-deps.s3.us-west-2.amazonaws.com/pkgs/bzip2"
  SNAPPY_DOWNLOAD_BASE: "https://rocksdb-deps.s3.us-west-2.amazonaws.com/pkgs/snappy"
  LZ4_DOWNLOAD_BASE: "https://rocksdb-deps.s3.us-west-2.amazonaws.com/pkgs/lz4"
  ZSTD_DOWNLOAD_BASE: "https://rocksdb-deps.s3.us-west-2.amazonaws.com/pkgs/zstd"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: unit-test
            command: make clean && make check && echo $? || echo $?
          - mame: black-box
            command: make clean && CRASH_TEST_EXT_ARGS=" --duration=500" make blackbox_asan_crash_test && echo $? || echo $?
          - mame: white-box
            command: make clean && CRASH_TEST_EXT_ARGS="--duration=500" make whitebox_asan_crash_test && echo $? || echo $?
    
    steps:
    
      - name: Pre
        run: |
          sudo apt-get update -y && sudo apt-get install -y g++ libgflags-dev software-properties-common golang-go gccgo lz4 binutils liblz4-dev libsnappy1v5 mlocate sysstat nvme-cli python3 python3-pip nodejs npm liblz4-dev libsnappy-dev libzstd-dev gdb dstat unzip apt-transport-https ca-certificates curl gnupg lsb-release parallel
    
      - name: Checkout
        uses: actions/checkout@v3

      - name: ${{ matrix.name }}
        run:  ${{ matrix.command }}
        
# ####in progress####
#   fuzz-test:
#     uses: speedb-io/rocksdb/.github/workflows/fuzz-test@main
